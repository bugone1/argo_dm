function RESULT = ncprofile_write_OSAP(ingested_flnm,output_flnm,PRES,TEMP,CAL_SAL,CAL_SAL_FLAG,cal_SAL_err,condslope,condslope_err,CalDate,MIN_MAP_ERR,mode,crit_max)
%NOTE: OUTPUT FLOAT_NUMBER CYCLE_NUMBER AND SCIENTIFIC_CALIB_COEFFICIENT in
%a separate file for Anh
% this routine is used to write data for a single profile Argo file (N_PROF=1) with
% updated PSAL_ADJUSTED and metadata parameters
%CAL_SAL_FLAG 's are generated by looking for NaN's and outliers in the CAL_SAL array
%and replacing NaN's with 99999
%PSAL_ADJUSTED is corrected to climatology if the correction to the
%conductivity slope adjustment exceeds 2*condslope_err; condslope_err is the uncertainty.
%temperature editing is carried into the delayed mode files by modifing
%TEMP_QC. Pressure editing is not carried through but a pressure flagged
%bad causes both the TEMP and SAL to be flagged bad.

%The uncertainty must exceed MIN_MAP_ERR, an estimate of the smallest expected difference between the mapping and measured salinity, given instrumental errors.

%MIN_MAP_ERR allows the PI to control the decision to correct the salinity. It originally takes a default value (.008). However, it can be adjusted
%if the PI wants to force correction (-1) or the PI wants to tag the
%profile as bad data (0). Increasing MIN_MAP_ERR to a value of ~.04 forces
%the salinity to be accepted uncorrected unless it is very
%much in error (fouled), or has ever been in error to this extent. This would be used if the PI thinks that the reference
%climatology does not represent the reality of the profile (an eddy, coastal locale, deep convection).
%It is possible that a sensor would be judged to be fouled by one criterion
%but then be judged not fouled by a later, less stringent criterion. This
%allows a PI to force acceptance of the current profile regardless of
%previous determinations.
% open file for writing ---
%if the program fails, you want it to close the netcdf file before returning
ncclose
copyfile(ingested_flnm,output_flnm) %create the new copy of the netCDF file
f = netcdf(output_flnm,'write'); % if you don't open f in write mode, you can't modify the dimensions.
if isempty(f), error('## Bad output file open operation.'), end;

%get reference dat in sdn format
REFERENCE_DATE_TIME = f{'REFERENCE_DATE_TIME'}(:); % Jan.1, 1950
if size(REFERENCE_DATE_TIME,2)==1
    REFERENCE_DATE_TIME = REFERENCE_DATE_TIME';
end
year = str2num(REFERENCE_DATE_TIME(1:4));month = str2num(REFERENCE_DATE_TIME(5:6));
day = str2num(REFERENCE_DATE_TIME(7:8));hour = str2num(REFERENCE_DATE_TIME(9:10));
minute = str2num(REFERENCE_DATE_TIME(11:12));
sdnref=datenum(year,month,day,hour,minute,0); clear year day minute month year REFERENCE_DATE_TIME

VERSION=eval(f{'FORMAT_VERSION'}(:));
if VERSION==2.2;
    PAR_LEN=16;
else
    PAR_LEN=4;
end

sbe_types = [841 846 851 856]; %wmo codes for floats with sbe sensors
if find(sbe_types == eval(f{'WMO_INST_TYPE'}(:)));
    sbe=1;
else
    sbe=0;
end

% Bad data applies to PSAL, not just PSAL_ADJUSTED.
criterion=condslope/MIN_MAP_ERR/40;
if crit_max==999 && criterion>100 %BAD CONDSLOPE OR identified by PI as bad profile - data no good
    CAL_SAL_FLAG(:) = 4;
    f{'PROFILE_PSAL_QC'}(:)='4';
end


a=f('N_LEVELS'); %necessary step if re-dimensioning: Feb. 2, 2004
levels=a(:);
di=levels-length(PRES);
if di>0
    PRES=[PRES; nan(di,1)];        TEMP=[TEMP; nan(di,1)];            CAL_SAL=[CAL_SAL; nan(di,1)];
    CAL_SAL_FLAG=[CAL_SAL_FLAG; nan(di,1)]; cal_SAL_err=[cal_SAL_err ;nan(di,1)];
end    
PRES=PRES(1:levels); TEMP=TEMP(1:levels); CAL_SAL=CAL_SAL(1:levels); CAL_SAL_FLAG=CAL_SAL_FLAG(1:levels); cal_SAL_err=cal_SAL_err(1:levels);

PSAL_ADJUSTED = f{'PSAL'}(:);
PSAL_ADJUSTED_QC = f{'PSAL_QC'}(:); % QC of 1,2 or 3 has been brought into this process and will be replaced by the original 1,2 or 3 but 4 will be from the delayed mode process. 5 & 8 do not apply.
TEMP_ADJUSTED = f{'TEMP'}(:);
TEMP_ADJUSTED_QC = f{'TEMP_QC'}(:); % QC of 1,2 or 3 has been brought into this process and will be replaced by the original 1,2 or 3 but 4 will be from the delayed mode process. 5 & 8 do not apply.
PRES_ADJUSTED = f{'PRES'}(:);
PRES_ADJUSTED_QC = f{'PRES_QC'}(:); % QC of 1,2 or 3 has been brought into this process and will be replaced by the original 1,2 or 3 but 4 will be from the delayed mode process. 5 & 8 do not apply.

if crit_max>2 || isnan(condslope)
    PSAL_ADJUSTED_QC(CAL_SAL_FLAG=='3')='3';
    PSAL_ADJUSTED=CAL_SAL;
end
ok=CAL_SAL_FLAG=='4';
PSAL_ADJUSTED_QC(ok)='4';
PSAL_ADJUSTED(ok)= 99999;
ok=isnan(TEMP);
TEMP_ADJUSTED_QC(ok)='4';
TEMP_ADJUSTED(ok) = 99999;
TEMP_ADJUSTED_ERROR=ones(size(TEMP_ADJUSTED))*99999;
if sbe
    TEMP_ADJUSTED_ERROR(~ok)=.002;
else
    TEMP_ADJUSTED_ERROR(~ok)=99999;
end
ok=isnan(PRES); %record the editing done to the pressure record
PRES_ADJUSTED_QC(ok)='4';
PRES_ADJUSTED(ok) = 99999;
PRES_ADJUSTED_ERROR=ones(size(PRES_ADJUSTED))*99999;
if sbe
    PRES_ADJUSTED_ERROR(~ok)=2.4;
else
    PRES_ADJUSTED_ERROR(~ok)=99999;
end

f{'PSAL_ADJUSTED'}(:)= PSAL_ADJUSTED; % Put these back into the net CDF file
f{'TEMP_ADJUSTED'}(:)= TEMP_ADJUSTED; % Put these back into the net CDF file
f{'PRES_ADJUSTED'}(:)= PRES_ADJUSTED; % Put these back into the net CDF file
f{'PSAL_ADJUSTED_QC'}(:)=PSAL_ADJUSTED_QC;
f{'TEMP_ADJUSTED_QC'}(:)=TEMP_ADJUSTED_QC;
f{'PRES_ADJUSTED_QC'}(:)=PRES_ADJUSTED_QC;
f{'TEMP_ADJUSTED_ERROR'}(:)=TEMP_ADJUSTED_ERROR;
f{'PRES_ADJUSTED_ERROR'}(:)=PRES_ADJUSTED_ERROR;
%Bob Keeley, June 26, 2003: "we would want you to set the QC flag of the adjusted profiles values to be 1 not 2."
nowe=now;temptime=nowe+(heuredete(nowe)/24);
DATE_UPDATE=sprintf('%4.4i%2.2i%2.2i%2.2i%2.2i%2.2i',round(datevec(temptime)));
DATE_CAL=sprintf('%4.4i%2.2i%2.2i%2.2i%2.2i%2.2i',round(datevec(CalDate)));
f{'DATE_UPDATE'}(:)=DATE_UPDATE;
f{'DATA_STATE_INDICATOR'}(:)=netstr('2C+',4);
if upper(mode)=='D';
    f{'DATA_MODE'}(:)='D';
elseif crit_max>0
    f{'DATA_MODE'}(:)='A';
else
    f{'DATA_MODE'}(:)='R';
end;
D = f('N_CALIB'); % increase the number of calibrations
if isempty(D)
    D(:)=1;
else
    tem=D(:);
    D(:)=tem+1;
end
N_HIST=f('N_HISTORY');
NEXT_REC=N_HIST(:)+1;

ipres=1;
itemp=2;
ipsal=3;

f{'PARAMETER'}(1,D(:),ipsal,:)=netstr('PSAL', PAR_LEN); %could find PSAL index by looking for it in STATION_PARAM (should be 3)
f{'PARAMETER'}(1,D(:),itemp,:)=netstr('TEMP', PAR_LEN); %could find PSAL index by looking for it in STATION_PARAM (should be 3)
f{'PARAMETER'}(1,D(:),ipres,:)=netstr('PRES', PAR_LEN); %could find PSAL index by looking for it in STATION_PARAM (should be 3)
f{'PSAL_ADJUSTED_ERROR'}(:)=max(cal_SAL_err,.01); %DMQC3 : .01 is minimum error. When we compute the THERMAL_CELL_ERR, have to update this

f{'SCIENTIFIC_CALIB_EQUATION'}(1,D(:),ipsal,:)=netstr('PSAL_ADJUSTED is calculated from a conductivity multiplicative adjustment term r.', 256);
f{'SCIENTIFIC_CALIB_COMMENT'}(1,D(:),ipres,:)=netstr('Calibration error is manufacturers specified PRES accuracy at time of lab calibration', 256);
f{'SCIENTIFIC_CALIB_COMMENT'}(1,D(:),itemp,:)=netstr('Calibration error is manufacturers specified TEMP accuracy at time of lab calibration', 256);
f{'CALIBRATION_DATE'}(1,D(:),ipsal,:)=netstr(DATE_CAL,14);
f{'HISTORY_INSTITUTION'}(NEXT_REC,1,:)=netstr('CI', 4);
f{'HISTORY_STEP'}(NEXT_REC,1,:)=netstr('ARSQ', 4);
f{'HISTORY_STEP_RELEASE'}(NEXT_REC,1,:)=netstr('MAR4', 4); %DEC3 MEANS DECEMBER, 2003 RELEASE OF ANNIE'S CODE AND DATABASE
f{'HISTORY_SOFTWARE'}(NEXT_REC,1,:)=netstr('WJO', 4);
f{'HISTORY_SOFTWARE_RELEASE'}(NEXT_REC,1,:)=netstr('2.0b', 4);
f{'HISTORY_REFERENCE'}(NEXT_REC,1,:)=netstr(['WOD01 WITH MIN_MAP_ERR = ' num2str(MIN_MAP_ERR)], 64);
f{'HISTORY_DATE'}(NEXT_REC,1,:)=netstr(DATE_UPDATE,14);
f{'HISTORY_PARAMETER'}(NEXT_REC,1,:)=netstr('PSAL', PAR_LEN);
f{'HISTORY_START_PRESSURE'}(NEXT_REC,1)=99999.;
f{'HISTORY_STOP_PRESSURE'}(NEXT_REC,1)=99999.;
f{'HISTORY_PREVIOUS_VALUE'}(NEXT_REC,1)=99999.;
f{'HISTORY_QCTEST'}(NEXT_REC,1,:)=netstr('0x60000', 16);%means "Wong et al. Correction and Visual QC performed by PI"
if crit_max>2 || isnan(condslope)
    f{'SCIENTIFIC_CALIB_COEFFICIENT'}(1,D(:),ipsal,:)=netstr(['COEFFICIENT r FOR CONDUCTIVITY IS ' num2str(condslope,7) ', +/- ' num2str(condslope_err,7)], 256);
    f{'SCIENTIFIC_CALIB_COMMENT'}(1,D(:),ipsal,:)=netstr(['Adjusted salinity to climatology according to WJO(2003). Ref. Data as supplied for intercalibration, AST-7.' ], 256);
    f{'HISTORY_ACTION'}(NEXT_REC,1,:)=netstr('QCCV', 4); %means "Quality Control; Change Value"
    RESULT = 2;
else
    f{'SCIENTIFIC_CALIB_COEFFICIENT'}(1,D(:),ipsal,:)=netstr('No significant salinity drift detected; r=1.000000', 256);
    f{'SCIENTIFIC_CALIB_COMMENT'}(1,D(:),ipsal,:)=netstr(['No salinity adjustment needed according to WJO(2003). Ref. Data are WOD 2001.' ], 256);
    f{'HISTORY_ACTION'}(NEXT_REC,1,:)=netstr('QCP$', 4); %means "Test Performed"
    RESULT = 1;
end
ncclose